<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 @Mapper를 지정한다. -->
<mapper namespace="com.gdu.ocean.mapper.UsersMapper">
	<!-- 이메일 유효성 체크 -->
	<select id="selectUsersByEmail" parameterType="String" resultType="UsersDTO">
		SELECT USER_NO, EMAIL, PW, PHONENO, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, NAME, AGREECODE
	 	FROM USERS
	   WHERE EMAIL = #{email}
	</select>
	<select id="selectSleepUsersByEmail" parameterType="String" resultType="SleepUsersDTO">
		SELECT EMAIL
		  FROM SLEEP_USERS
		 WHERE EMAIL = #{email}
	</select>
	<select id="selectOutUsersByEmail" parameterType="String" resultType="OutUsersDTO">
		SELECT EMAIL
		  FROM OUT_USERS
		 WHERE EMAIL = #{email}
	</select>

	<select id="selectUsersByPhoneNo" parameterType="String" resultType="UsersDTO">
	SELECT EMAIL, PHONENO, JOINED_AT
      FROM USERS
     WHERE PHONENO = #{phoneNo}
	</select>
	
	  <select id="selectSleepUsersByPhoneNo" parameterType="String" resultType="SleepUsersDTO">
    SELECT PHONENO
      FROM SLEEP_USERS
     WHERE PHONENO = #{phoneNo}
  </select>

  <select id="selectOutUsersByPhoneNo" parameterType="String" resultType="OutUsersDTO">
    SELECT PHONENO
      FROM OUT_USERS
     WHERE PHONENO = #{phoneNo}
  </select>
  
  <!-- 가입 -->
	<insert id="insertUsers" parameterType="UsersDTO">
		INSERT INTO USERS (
		     EMAIL
		   , PW
		   , PHONENO
		   , POSTCODE
		   , ROAD_ADDRESS
		   , JIBUN_ADDRESS
		   , DETAIL_ADDRESS
		   , NAME
		   , JOINED_AT
		   , AGREECODE
		) VALUES (
			  #{email}
			, #{pw}
			, #{phoneNo}
			, #{postcode}
			, #{roadAddress}
			, #{jibunAddress}
			, #{detailAddress}
			, #{name}
			, NOW()
			, #{agreecode}
		)		
	</insert>
	<select id="selectUsersByUsersDTO" parameterType="UsersDTO" resultType="UsersDTO">
    SELECT USER_NO, EMAIL, PW, PHONENO, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, NAME, AGREECODE
    FROM USERS
    WHERE EMAIL = #{email}
      AND PW = SHA2(#{pw}, 256)
	</select>
	
	
	<update id="updateUsersAccess" parameterType="String">
		UPDATE USERS_ACCESS
		   SET LAST_LOGIN_AT = NOW() 
		 WHERE EMAIL = #{email}
	</update>
	<insert id="insertUsersAccess" parameterType="String">
	    INSERT INTO USERS_ACCESS (EMAIL, LAST_LOGIN_AT)
	    VALUES (#{email}, NOW())
	</insert>
	<update id="insertAutologin" parameterType="UsersDTO">
		UPDATE USERS
		   SET AUTOLOGIN_EMAIL = #{autologinEmail}
		     , AUTOLOGIN_EXPIRED_AT = #{autologinExpiredAt}
		 WHERE EMAIL = #{email}
	</update>
	<update id="deleteAutologin" parameterType="String">
	    UPDATE USERS
	       SET AUTOLOGIN_EMAIL = NULL
	         , AUTOLOGIN_EXPIRED_AT = NULL
	      WHERE EMAIL = #{email}
	</update>
	<select id="selectAutologin" parameterType="String" resultType="UsersDTO">
	  SELECT EMAIL
	    FROM USERS
	   WHERE AUTOLOGIN_EMAIL = #{autologinEmail}
	     AND AUTOLOGIN_EXPIRED_AT > NOW() 
	</select>
	  
	  <insert id="insertOutUsers" parameterType="String"> 
	  	INSERT INTO OUT_USERS (
	  		   EMAIL
	  	     , JOINED_AT
	  	     , OUT_AT
	  	   ) VALUES (
	  	       #{email}
     		 , #{joinedAt}
      	     ,NOW()
	  	   )
	  </insert>
	  <delete id="deleteUsers" parameterType="String">
	    DELETE
	      FROM USERS
	     WHERE EMAIL = #{email}
	  </delete>
	  
	  <!-- 휴면처리 1단계 : 1년(12개월) 이상 접속 내역(USER_ACCESS_T의 LAST_LOGIN_AT)이 없는 회원을 휴면 테이블에 저장하기 -->
	  <insert id="insertSleepUsers">
	  	INSERT INTO SLEEP_USERS (
	  		EMAIL
	  	   ,PW
	  	   ,PHONENO
	  	   ,POSTCODE
	  	   ,ROAD_ADDRESS
	  	   ,JIBUN_ADDRESS
	  	   ,DETAIL_ADDRESS
	  	   ,NAME
	  	   ,JOINED_AT
	  	   ,SLEPT_AT
	  	   ,AGREECODE
	  	) (SELECT U.EMAIL
	  		     ,U.PW
	  		     ,U.PHONENO
	  		     ,U.POSTCODE
	  		     ,U.ROAD_ADDRESS
	  		     ,U.JIBUN_ADDRESS
	  		     ,U.DETAIL_ADDRESS
	  		     ,U.NAME
	  		     ,U.JOINED_AT
	  		     ,SLEPT_AT
	  		     ,AGREECODE
	        FROM USERS U LEFT OUTER JOIN USERS_ACCESS UA
	          ON U.EMAIL = UA.EMAIL
	       WHERE MONTHS_BETWEEN(NOW(), UA.LAST_LOGIN_AT) >= 12 <!-- 12개월 이상 로그인 이력이 없는 회원 -->
	          OR (MONTHS_BETWEEN(NOW(), U.JOINED_AT) >= 12 AND UA.LAST_LOGIN_AT IS NULL)) <!-- 가입일이 12개월 이상 지나고, 로그인 이력이 아예 없는 회원 -->
	  </insert>
	  
	  <!-- 휴면처리 2단계 : 1년(12개월) 이상 접속 내역(USER_ACCESS_T의 LAST_LOGIN_AT)이 없는 회원을 회원 테이블에서 삭제하기 -->
	  <delete id="deleteUsersForSleep">
	    DELETE
	      FROM USERS
	     WHERE EMAIL IN(SELECT U.EMAIL
	                      FROM USERS U LEFT OUTER JOIN USERS_ACCESS UA
	                        ON U.EMAIL = UA.EMAIL
	                     WHERE MONTHS_BETWEEN(NOW(), UA.LAST_LOGIN_AT) >= 12
	                        OR (MONTHS_BETWEEN(NOW(), U.JOINED_AT) >= 12 AND UA.LAST_LOGIN_AT IS NULL))
	  </delete>

	  <!-- 휴면복원 1단계 : 휴면 테이블의 데이터를 회원 테이블에 저장하기 -->
	<insert id="insertRestoreUsers" parameterType="String">
	  INSERT IGNORE INTO USERS
	  (EMAIL, PW, PHONENO, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, NAME, JOINED_AT, AGREECODE, PW_MODIFIED_AT)
	  SELECT EMAIL, PW, PHONENO, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, NAME, JOINED_AT, AGREECODE, PW_MODIFIED_AT
	  FROM SLEEP_USERS
	  WHERE EMAIL = #{email}
	</insert>

  
  <!-- 휴면복원 2단계 : 복원할 회원을 SLEEP_USERS 테이블에서 삭제하기 -->
  <delete id="deleteSleepUsers" parameterType="String">
    DELETE
      FROM SLEEP_USERS
     WHERE EMAIL = #{email}
  </delete>
  
    <!-- 비밀번호 변경 -->
  <update id="updateUsersPassword" parameterType="UsersDTO">
    UPDATE USERS
       SET PW = #{pw}
         , PW_MODIFIED_AT = NOW()
     WHERE EMAIL = #{email}
  </update>
  
    <!-- 개인정보 변경 -->
  <update id="updateUsersInfo" parameterType="UsersDTO">
    UPDATE USERS
       SET PHONENO = #{phoneNo}
         , POSTCODE = #{postcode}
         , ROAD_ADDRESS = #{roadAddress}
         , JIBUN_ADDRESS = #{jibunAddress}
         , DETAIL_ADDRESS = #{detailAddress}
         , NAME = #{name}
         , AGREECODE = #{agreecode}
     WHERE EMAIL = #{email}
  </update>
   <!-- 네이버 회원 가입 -->
  <insert id="insertNaverUsers" parameterType="UsersDTO">
    INSERT INTO USERS (
        EMAIL
      , PW
      , NAME
      , PHONENO
      , AGREECODE
      , JOINED_AT
      , PW_MODIFIED_AT
    ) VALUES (
        #{email}
      , #{pw}
      , #{name}
      , #{phoneNo}
      , #{agreecode}
      , NOW()
      , NOW()
    )
  </insert>	
  
  <!-- 카카오 회원 가입 -->
  <insert id="insertKakaoUsers" parameterType="UsersDTO">
    INSERT INTO USERS (
        EMAIL
      , PW
      , NAME
      , PHONENO
      , AGREECODE
      , JOINED_AT
      , PW_MODIFIED_AT
    ) VALUES (
        #{email}
      , #{pw}
      , #{name}
      , #{phoneNo}
      , #{agreecode}
      , NOW()
      , NOW()
    )
  </insert>	    
</mapper> 